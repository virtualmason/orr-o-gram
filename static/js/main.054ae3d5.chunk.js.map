{"version":3,"sources":["constants/routes.js","context/firebase.js","lib/firebase.js","context/user.js","wdur.js","App.js","hooks/use-auth-listener.js","index.js"],"names":["DASHBOARD","LOGIN","SIGN_UP","NOT_FOUND","HEADER","FirebaseContext","createContext","firebase","Firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","FieldValue","firestore","userContext","require","whyDidYouRender","React","trackAllPureComponents","Login","lazy","SignUp","Dashboard","NotFound","Header","App","user","useState","JSON","parse","localStorage","getItem","setUser","useContext","useEffect","listener","auth","onAuthStateChanged","authUser","setItem","stringify","removeItem","useAuthListener","Provider","value","fallback","path","Routes","component","ReactDOM","render","document","getElementById"],"mappings":"+GAAA,0KAAO,IAAMA,EAAY,aACZC,EAAQ,SACRC,EAAU,WAEVC,EAAY,aACZC,EAAS,W,gCCLtB,WACMC,EAAkBC,wBAAc,MAEvBD,O,gCCHf,gFAeME,GAfN,YAeiBC,IAASC,cAXX,CACXC,OAAQC,0CACRC,WAAYD,6BACZE,UAAWF,aACXG,cAAeH,yBACfI,kBAAmBJ,eACnBK,MAAOL,+CAMHM,EAAeT,IAASU,UAAxBD,Y,gCChBR,WAEME,EAAcb,wBAAc,MACnBa,O,gFCDSC,EAAQ,GAChCC,CAAgBC,IAAO,CACrBC,wBAAwB,I,+ECEpBC,EAAQC,gBAAK,kBAAM,iCACnBC,EAASD,gBAAK,kBAAM,iCACpBE,EAAYF,gBAAK,kBAAM,uDACvBG,EAAWH,gBAAK,kBAAM,iCACtBI,EAASJ,gBAAK,kBAAM,gCAEX,SAASK,IACtB,IAAQC,ECVK,WACX,MAAwBC,mBAASC,KAAKC,MAAMC,aAAaC,QAAQ,cAAjE,mBAAOL,EAAP,KAAaM,EAAb,KACQ9B,EAAa+B,qBAAWjC,KAAxBE,SAkBR,OAhBAgC,qBAAU,WAEN,IAAMC,EAAWjC,EAASkC,OAAOC,oBAAmB,SAACC,GAG9CA,GACCR,aAAaS,QAAQ,WAAYX,KAAKY,UAAUF,IAChDN,EAAQM,KAERR,aAAaW,WAAW,YACxBT,EAAQ,UAIlB,OAAO,kBAAMG,OACb,CAACjC,IACI,CAAEwB,QDVOgB,GAAVhB,KAER,OACE,cAAC,IAAYiB,SAAb,CAAsBC,MAAOlB,EAA7B,SACA,cAAC,IAAD,UACE,cAAC,WAAD,CAAUmB,SAAU,2CAApB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAMC,IAAcC,UAAW7B,IACtC,cAAC,IAAD,CAAO2B,KAAMC,IAAgBC,UAAW3B,IACxC,cAAC,IAAD,CAAOyB,KAAMC,IAAkBC,UAAW1B,IAC1C,cAAC,IAAD,CAAOwB,KAAMC,IAAkBC,UAAWzB,IAC1C,cAAC,IAAD,CAAOuB,KAAMC,IAAeC,UAAWxB,a,kBEhBjDyB,IAASC,OACP,cAAC,IAAgBP,SAAjB,CAA0BC,MAAO,CAAE1C,aAAUU,gBAA7C,SACE,cAACa,EAAD,MAEF0B,SAASC,eAAe,W","file":"static/js/main.054ae3d5.chunk.js","sourcesContent":["export const DASHBOARD = \"/dashboard\";\nexport const LOGIN = \"/login\";\nexport const SIGN_UP = \"/sign-up\"; \nexport const PROFILE = \"/p/:username\";\nexport const NOT_FOUND = \"/not-found\";\nexport const HEADER = '/header';\n","import { createContext } from 'react';\nconst FirebaseContext = createContext(null);\n\nexport default FirebaseContext;","import Firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n// import { seedDatabase } from '../seed'\nconst config = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTHDOMAIN,\n    projectId: process.env.REACT_APP_POJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGEING_SENDER,\n    appId: process.env.REACT_APP_APP_ID\n \n};\n\n//   firebase.initializeApp(firebase);\nconst firebase = Firebase.initializeApp(config);\nconst { FieldValue } = Firebase.firestore;\n\nexport { firebase, FieldValue };\n\n\n","import { createContext } from 'react';\n\nconst userContext = createContext(null);\nexport default userContext;","import React from \"react\";\n\nconst whyDidYouRender = require(\"@welldone-software/why-did-you-render\");\nwhyDidYouRender(React, {\n  trackAllPureComponents: true,\n});\n","import { lazy, Suspense } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport * as Routes from \"./constants/routes\";\nimport useAuthListener from './hooks/use-auth-listener.js';\nimport userContext from './context/user';\n\nconst Login = lazy(() => import(\"./pages/login\"));\nconst SignUp = lazy(() => import(\"./pages/sign-up\"));\nconst Dashboard = lazy(() => import('./pages/dashboard'));\nconst NotFound = lazy(() => import(\"./pages/not-found\"))\nconst Header = lazy(() => import(\"./components/header\"))\n\nexport default function App() {\n  const { user } =  useAuthListener();\n  \n  return (\n    <userContext.Provider value={user}>\n    <Router >\n      <Suspense fallback={<p>Loading...</p>}>\n        <Switch>\n          <Route path={Routes.LOGIN} component={Login} />\n          <Route path={Routes.SIGN_UP} component={SignUp} />\n          <Route path={Routes.DASHBOARD} component={Dashboard} />\n          <Route path={Routes.NOT_FOUND} component={NotFound} />\n          <Route path={Routes.HEADER} component={Header} />\n        </Switch>\n      </Suspense>\n    </Router>\n    </userContext.Provider>\n  );\n}\n\n","import React,{useState, useEffect, useContext} from  'react';\nimport FirebaseContext from '../context/firebase';\n\nexport default function useAuthListener(){\n    const [user, setUser] = useState(JSON.parse(localStorage.getItem('authUser')));\n    const { firebase } = useContext(FirebaseContext);\n\n    useEffect(()=>{\n\n        const listener = firebase.auth().onAuthStateChanged((authUser) => {\n            //we have user to store in local\n\n            if(authUser) {\n                localStorage.setItem('authUser', JSON.stringify(authUser))\n                setUser(authUser)\n            } else {\n                localStorage.removeItem('authUser');\n                setUser(null)\n            }\n        })\n    \n      return () => listener();\n    },[firebase]);\n    return { user };\n\n}\n","import \"./wdur\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport FirebaseContext from \"./context/firebase\";\nimport { firebase, FieldValue } from \"./lib/firebase\";\nimport \"./styles/app.css\";\n\nReactDOM.render(\n  <FirebaseContext.Provider value={{ firebase, FieldValue }}>\n    <App />\n  </FirebaseContext.Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}